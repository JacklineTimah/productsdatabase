{"version":3,"sources":["user.middleware.js"],"names":["require","runQuery","fetchUserById","checkIfIdExists","req","res","next","id","_ref","_ref2","_ref2$","user","regeneratorRuntime","async","_context","prev","params","awrap","sent","_slicedToArray","abrupt","status","json","code","data","console","log","t0","stop","module","exports"],"mappings":"goBAAqBA,QAAQ,6BAArBC,kBAAAA,mBACkBD,QAAQ,mBAA1BE,wBAAAA,cAEFC,gBAAkB,SAAOC,EAAKC,EAAKC,GAAjB,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAR,MAAA,KAAA,EAAA,OAAAQ,EAAAC,KAAA,EAEZR,EAAOH,EAAIY,OAAXT,GAFYO,EAAAR,KAAA,EAAAM,mBAAAK,MAGQhB,SAASC,cAAe,CAACK,KAHjC,KAAA,EAAA,GAAAC,EAAAM,EAAAI,KAAAT,EAAAU,eAAAX,EAAA,GAAAE,EAAAD,EAAA,GAGbE,OAHa,IAAAD,EAGN,KAHMA,EAAA,CAAAI,EAAAR,KAAA,GAAA,MAAA,OAAAQ,EAAAM,OAAA,SAKXf,EAAIgB,OAAO,KAAKC,KAAK,CAC1BD,OAAQ,QACRE,KAAM,IAVNtB,QAWS,sBACTuB,KAAM,QATU,KAAA,GAAA,OAYpBC,QAAQC,IAAI,CAAEf,KAAAA,IAZZR,EAAAA,KAAAA,EAAkBW,EAAAM,OAAA,SAAAd,KAAA,KAAA,GAAA,OAAAQ,EAAAC,KAAA,GAAAD,EAAAa,GAAAb,EAAA,MAAA,GAAAA,EAAAM,OAAA,SAAAd,EAAAQ,EAAAa,KAAA,KAAA,GAAA,IAAA,MAAA,OAAAb,EAAAc,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,OAAAC,OAAAC,QAAA,CAEZvB,gBAAAA","file":"user.middleware.min.js","sourcesContent":["const { runQuery } = require('../config/database.config');\r\nconst { fetchUserById } = require('../queries/user');\r\n\r\nconst checkIfIdExists = async (req, res, next) => {\r\n  try {\r\n    const { id } = req.params;\r\n    const [user = null] = await runQuery(fetchUserById, [id]);\r\n    if (!user) {\r\n      return res.status(400).json({\r\n        status: 'error',\r\n        code: 400,\r\n        message: 'User does not exist',\r\n        data: null,\r\n      });\r\n    }\r\n    console.log({ user })\r\n    req.user = user;\r\n    return next();\r\n  } catch (error) {\r\n    return next(error);\r\n  }\r\n};\r\n\r\nmodule.exports = {\r\n  checkIfIdExists,\r\n};\r\n"]}