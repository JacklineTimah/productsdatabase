{"version":3,"sources":["user.controller.js"],"names":["UserService","require","createUser","req","res","next","response","regeneratorRuntime","async","_context","prev","awrap","body","sent","abrupt","status","json","t0","stop","signInUser","result","_context2","loginUser","code","module","exports"],"mappings":"aAAA,IAAMA,YAAcC,QAAQ,4BAStBC,WAAa,SAAOC,EAAKC,EAAKC,GAAjB,IAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAJ,MAAA,KAAA,EAAA,OAAAI,EAAAC,KAAA,EAAAD,EAAAJ,KAAA,EAAAE,mBAAAI,MAEYX,YAAYE,WAAWC,EAAIS,OAFvC,KAAA,EAAA,OAELN,EAFKG,EAAAI,KAAAJ,EAAAK,OAAA,SAAHV,EAAGW,OAAbb,EAAAA,MAAac,KAAAV,IAAA,KAAA,EAAAG,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,MAAA,GAAAJ,EAAAI,EAAAQ,IAAA,KAAA,GAAA,IAAA,MAAA,OAAAR,EAAAS,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,MAgBbC,WAAa,SAAOhB,EAAKC,EAAKC,GAAjB,IAAAe,EAAA,OAAAb,mBAAAC,MAAA,SAAAa,GAAA,OAAA,OAAAA,EAAAX,KAAAW,EAAAhB,MAAA,KAAA,EAAA,OAAAgB,EAAAX,KAAA,EAAAW,EAAAhB,KAAA,EAAAE,mBAAAI,MAhBAX,YAAAsB,UAAAnB,EAAAS,OAgBA,KAAA,EAAA,OAhBAQ,EAgBAC,EAAAR,KAAAQ,EAAAP,OAAA,SAhBAV,EAAAW,OAAAK,EAAAG,MAAAP,KAAAI,IAgBA,KAAA,EAAAC,EAAAX,KAAA,EAAAW,EAAAJ,GAAAI,EAAA,MAAA,GAKXhB,EAAIgB,EAAAJ,IALO,KAAA,GAAA,IAAA,MAAA,OAAAI,EAAAH,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,MAhBAM,OAAAC,QAAA,CAAAvB,WAAAA,WAAAiB,WAAAA","file":"user.controller.min.js","sourcesContent":["const UserService = require('../services/user.service');\r\n\r\n/**\r\n * Controller creating a new user\r\n * @param {*} req \r\n * @param {*} res \r\n * @param {*} next \r\n * @returns JSON object as response data\r\n */\r\nconst createUser = async (req, res, next) => {\r\n    try {\r\n        const response = await UserService.createUser(req.body);\r\n        return res.status(response.code).json(response)\r\n    } catch (error) {\r\n        next(error)\r\n    }\r\n}\r\n\r\n/**\r\n * Controller for login user\r\n * @param {*} req \r\n * @param {*} res \r\n * @param {*} next \r\n * @returns \r\n */\r\nconst signInUser = async (req, res, next) => {\r\n    try {\r\n        const result = await UserService.loginUser(req.body);\r\n        return res.status(result.code).json(result);\r\n    } catch (error) {\r\n        next(error)\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    createUser,\r\n    signInUser\r\n}"]}