"use strict";var _require=require("../queries/products"),addProduct=_require.addProduct,fetchAllProducts=_require.fetchAllProducts,findProductbyName=_require.findProductbyName,_require2=require("../config/database.config"),runQuery=_require2.runQuery,createProducts=function(r){var t,u,c,s,a;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return t=r.name,u=r.price,c=r.quantity,e.next=3,regeneratorRuntime.awrap(runQuery(findProductbyName,[t]));case 3:if(0<(s=e.sent).length)throw console.log(s),{code:409,message:"Product already exist",data:null,status:"error"};e.next=7;break;case 7:return e.next=9,regeneratorRuntime.awrap(runQuery(addProduct,[t,u,c]));case 9:return a=e.sent,console.log(a),e.abrupt("return",{code:201,status:"success",message:"New product added successfully",data:a});case 12:case"end":return e.stop()}})},getAllProducts=function(){var r;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(runQuery(fetchAllProducts));case 3:return r=e.sent,console.log(r),e.abrupt("return",{code:200,status:"success",message:"All Products fetched successfully",data:r});case 8:throw e.prev=8,e.t0=e.catch(0),console.error("Error fetching products:",e.t0),{code:500,status:"error",message:"Failed to fetch products",data:null};case 12:case"end":return e.stop()}},null,null,[[0,8]])};module.exports={createProducts:createProducts,getAllProducts:getAllProducts};
//# sourceMappingURL=products.service.min.js.map
